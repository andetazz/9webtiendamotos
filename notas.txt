* crear archivo de configuraci贸n en visual studio
-------------------------------
"se crea un archivo en la raiz del proyecto"
procfile 
        web: gunicorn run:app
-------
pip install gunicorn
"instala el archivo nuevo en visual estudio"
pip freeze > requirements.txt
"actualiza todos las librerias del proyecto"
----
*  COMO SUBIRLO A GIT
- abrir githun en web
- crear repositorio
-nombre del proyecto- crear repositori
git config user.name
git config --global user.name "andetazz"
git config --global user.email "andeazz87@gmail.com" 

git init
git add .
git commit -m "first commit"
git branch -M main
git remote add origin https://github.com/andetazz/tiendamotosmysql.git
git push -u origin main

*----- para adicionar cuando hay cambios en el proyecto 
git add .
git commit -m "first commit"
git push -u origin main
--------

*deplgar el proyecto en render
"luego nos dirigimos a la pagina web render creamos el usuario
https://render.com/
"vamos"
new
web service
"en el campo Start command colocamos el codigo"
gunicorn run:app
free
deplou web service.


administrador de credenciales

python run.py
*-------
desplegar el proyecto pero con MySQL
investigar sobre FIREBASE.
-------

https://flet.dev/docs/

desarrollo en Python para dispositivos m贸viles 
------------------
pdg flask
pip install reportlab
pip install datetime 
pip install pytz
--------------------
migrar datos de mysql a mysqllite
chatgpt
como el addcarrito es un modal quiero que cuando le de agregar carrito no me vuelva a cargar  el dasboard por que vuelve a cargarme los productos y quiero que se quede es en el registro del producto que estaba adicionando sin refrescar el index en la funcion add @bp.route('/carrito/add/<int:id>', methods=['GET', 'POST']) 
@login_required
def add(id):

from sqlalchemy import create_engine, MetaData, Table, select

# Conexi贸n a MySQL
engine_mysql = create_engine('mysql+pymysql://usuario:clave@host/base_mysql')
# Conexi贸n a SQLite
engine_sqlite = create_engine('sqlite:///ruta/a/tu_sqlite.db')

metadata = MetaData()

# Ejemplo: sincronizar la tabla 'mi_tabla'
mi_tabla = Table('mi_tabla', metadata, autoload_with=engine_mysql)

# Extraer datos de MySQL
with engine_mysql.connect() as conn_mysql:
    resultados = conn_mysql.execute(select(mi_tabla)).fetchall()

# Insertar datos en SQLite
with engine_sqlite.connect() as conn_sqlite:
    for fila in resultados:
        # Convertir la fila a diccionario para el insert
        conn_sqlite.execute(mi_tabla.insert().values(**fila._mapping))
    conn_sqlite.commit()

------------------------------
    abril 2025
------------------------------
* subir proyecto al servidor 

el servidor se llama composer
se instala coolify en el servidor
https://coolify2.isladigital.xyz/
clave: A....*
proyectos
add
agregar repositorio 
dockerfile
copiamos la configuracion que tenemos en docker-compose.yml
https://Andymothors.red.isladigital.xyz/
setings
